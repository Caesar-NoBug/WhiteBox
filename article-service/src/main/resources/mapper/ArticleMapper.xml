<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.caesar.article.mapper.ArticleMapper">

    <resultMap id="BaseResultMap" type="org.caesar.article.model.po.ArticlePO">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="digest" column="digest" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="TINYINT"/>
        <result property="tags" column="tags" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by" jdbcType="BIGINT"/>
        <result property="createAt" column="create_at" jdbcType="TIMESTAMP"/>
        <result property="updateAt" column="update_at" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,title,content,digest,
        type,tags,create_by,create_at,
        update_at,is_delete
    </sql>

    <insert id="markArticle">
        INSERT INTO article_ops
            (user_id, article_id, mark)
        VALUES (#{userId}, #{articleId}, #{mark})
        ON DUPLICATE KEY UPDATE mark = #{mark};
    </insert>

    <insert id="addViewHistory">
        INSERT INTO article_view
            (user_id, article_id, view_at)
        VALUES (#{userId}, #{articleId}, #{viewAt})
        ON DUPLICATE KEY UPDATE view_at = #{viewAt}
    </insert>

    <update id="favorArticle">
        INSERT INTO article_ops
            (user_id, article_id, favored)
        VALUES (#{userId}, #{articleId}, #{favored})
        ON DUPLICATE KEY UPDATE favored = #{favored};
    </update>

    <delete id="deleteArticleOps">
        DELETE
        FROM article_ops
        WHERE article_id = #{articleId}
    </delete>

    <select id="getArticleHistory" resultType="org.caesar.article.model.po.ArticlePO">
        SELECT id, title, digest, view_at viewAt, create_by
        FROM article
                 JOIN article_view
                      ON article.id = #{articleId}
                          AND article_view.article_id = #{articleId}
                          AND article_view.user_id = #{userId}
                          AND article.is_delete = 0
        ORDER BY view_at, id DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="hasDiffArticleMark" resultType="java.lang.Boolean">
        SELECT COUNT(*)
        FROM article_ops
        WHERE article_id = #{articleId}
          AND user_id = #{userId}
          AND mark != #{mark}
    </select>

    <select id="hasDiffArticleFavor" resultType="java.lang.Boolean">
        SELECT COUNT(*)
        FROM article_ops
        WHERE article_id = #{articleId}
          AND user_id = #{userId}
          AND favored!= #{favored}
    </select>

    <select id="getArticleOps" resultType="org.caesar.article.model.entity.ArticleOps">
        SELECT mark, favored
        FROM article_ops
        WHERE article_id = #{articleId}
            AND user_id = #{userId}
    </select>

    <select id="getUpdatedArticle" resultType="org.caesar.article.model.po.ArticlePO">
        SELECT id, title, content, digest, tags, update_at, is_delete
        FROM article
        WHERE update_at > #{updateAt}
    </select>

</mapper>
